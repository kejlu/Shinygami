xlab('') + ylab('Revenue (USD in millions)') + ggtitle('Worldwide Apple Revenue 2010 - 2016')
#scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.5),1)) +
scale_y_continuous(limits = c(0, 35000), breaks = round(seq(min(countries_rev2$Rev), max(countries_rev2$Rev), by = 5000),1))
ggplotly(p_region_rev)
#gg_animate(g)
# Apple region revenue
p_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev, color = Region, group = Region, frame = Year)) +
geom_point(size = 4) +
geom_line() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab('') + ylab('Revenue (USD in millions)') + ggtitle('Worldwide Apple Revenue 2010 - 2016')
#scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.5),1)) +
scale_y_continuous(limits = c(0, 35000), breaks = round(seq(min(countries_rev2$Rev), max(countries_rev2$Rev), by = 5000),1))
ggplotly(p_region_rev)
#gg_animate(g)
p_prod_rev <- ggplot(data = prod_rev2, aes(x = Y_Q, y = Rev, color = Product, group = Product )) +
geom_point(size = 4) + geom_line() +
xlab('') + ylab('Revenue (USD in millions)') + ggtitle('Apple Product Revenue 2010 - 2016')
ggplotly(p_prod_rev)
View(prod_units2)
p_prod_rev <- ggplot(data = prod_rev2, aes(x = Y_Q, y = Rev, color = Product, group = Product )) +
geom_point(size = 4) + geom_line() +
xlab('') + ylab('Revenue (USD in millions)') + ggtitle('Apple Product Revenue 2010 - 2016')
ggplotly(p_prod_rev)
p_prod_rev <- ggplot(data = prod_rev2, aes(x = Y_Q, y = Rev, color = Product, group = Product )) +
geom_point(size = 4) + geom_line() +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Product Revenue 2010 - 2016')
ggplotly(p_prod_rev)
p_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev, color = Region, group = Region, frame = Year)) +
geom_point(size = 4) +
geom_line() + theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016')
#scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.5),1)) +
scale_y_continuous(limits = c(0, 35000), breaks = round(seq(min(countries_rev2$Rev), max(countries_rev2$Rev), by = 5000),1))
ggplotly(p_region_rev)
p_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev, color = Region, group = Region, frame = Year)) +
geom_point(size = 4) +
geom_line() + theme(axis.text.x = element_text(angle = 20, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016')
#scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.5),1)) +
scale_y_continuous(limits = c(0, 35000), breaks = round(seq(min(countries_rev2$Rev), max(countries_rev2$Rev), by = 5000),1))
ggplotly(p_region_rev)
p_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev, color = Region, group = Region, frame = Year)) +
geom_point(size = 4) +
geom_line() + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016')
#scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.5),1)) +
scale_y_continuous(limits = c(0, 35000), breaks = round(seq(min(countries_rev2$Rev), max(countries_rev2$Rev), by = 5000),1))
ggplotly(p_region_rev)
p_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev, color = Region, group = Region, frame = Year)) +
geom_point(size = 4) +
geom_line() + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016')
#scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.5),1)) +
scale_y_continuous(limits = c(0, 35000), breaks = round(seq(min(countries_rev2$Rev), max(countries_rev2$Rev), by = 2000),1))
ggplotly(p_region_rev)
#gg_animate(g)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?plotlyOutput
shiny::runApp()
shiny::runApp()
ShinyApp()
shiny::runApp()
shinyApp(ui, server)
?menuItem
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
p_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev, color = Region, group = Region, frame = Year)) +
geom_point(size = 4) +
geom_line() + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016')
#scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.5),1)) +
scale_y_continuous(limits = c(0, 35000), breaks = round(seq(min(countries_rev2$Rev), max(countries_rev2$Rev), by = 2000),1))
ggplotly(p_region_rev)
library(dplyr)
library(ggplot2)
library(plotly)
library(shiny)
library(shinydashboard)
library(devtools)
# dollars in millions
countries_rev <- read.csv("apple_revenue.csv", header = FALSE)
colnames(countries_rev) <- c('Year', 'Quarter', 'Americas', 'Europe', 'Asia',
'Retail', 'Total', 'Q_Y', 'Y_Q')
countries_rev2 <- read.csv("apple2_revenue.csv", header = FALSE, stringsAsFactors = FALSE)
colnames(countries_rev2) <- c('Q_Y', 'Y_Q', 'Year', 'Quarter', 'Region', 'Rev')
# units in thousands
prod_units <- read.csv("apple_prod_units.csv", header = FALSE, stringsAsFactors = FALSE)
colnames(prod_units) <- c('Year', 'Quarter', 'iPhone', 'iPad', 'Mac', 'iPod', 'Q_Y', 'Y_Q')
prod_units2 <- read.csv("apple2_prod_units.csv", header = FALSE, stringsAsFactors = FALSE)
colnames(prod_units2) <- c('Q_Y', 'Y_Q', 'Year', 'Quarter', 'Product', 'Units')
# dollars in millions
prod_rev <- read.csv("apple_prod_revenue.csv", header = FALSE, stringsAsFactors = FALSE)
colnames(prod_rev) <- c('Year', 'Quarter', 'iPhone', 'iPad', 'Mac', 'iPod', 'Q_Y', 'Y_Q')
prod_rev2 <- read.csv("apple2_prod_revenue.csv", header = FALSE, stringsAsFactors = FALSE)
colnames(prod_rev2) <- c('Q_Y', 'Y_Q', 'Year', 'Quarter', 'Product', 'Rev')
p_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev, color = Region, group = Region, frame = Year)) +
geom_point(size = 4) +
geom_line() + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016')
#scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.5),1)) +
scale_y_continuous(limits = c(0, 35000), breaks = round(seq(min(countries_rev2$Rev), max(countries_rev2$Rev), by = 2000),1))
ggplotly(p_region_rev)
p_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev, color = Region, group = Region, frame = Year)) +
geom_point(size = 4) +
geom_line() + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016')
#scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.5),1)) +
scale_y_continuous(limits = c(0, 35000), breaks = round(seq(min(countries_rev2$Rev), max(countries_rev2$Rev), by = 2000),1))
ggplotly(p_region_rev)
library(dplyr)
library(ggplot2)
library(plotly)
library(shiny)
library(shinydashboard)
library(devtools)
# dollars in millions
countries_rev <- read.csv("apple_revenue.csv", header = FALSE)
colnames(countries_rev) <- c('Year', 'Quarter', 'Americas', 'Europe', 'Asia',
'Retail', 'Total', 'Q_Y', 'Y_Q')
countries_rev2 <- read.csv("apple2_revenue.csv", header = FALSE, stringsAsFactors = FALSE)
colnames(countries_rev2) <- c('Q_Y', 'Y_Q', 'Year', 'Quarter', 'Region', 'Rev')
# units in thousands
prod_units <- read.csv("apple_prod_units.csv", header = FALSE, stringsAsFactors = FALSE)
colnames(prod_units) <- c('Year', 'Quarter', 'iPhone', 'iPad', 'Mac', 'iPod', 'Q_Y', 'Y_Q')
prod_units2 <- read.csv("apple2_prod_units.csv", header = FALSE, stringsAsFactors = FALSE)
colnames(prod_units2) <- c('Q_Y', 'Y_Q', 'Year', 'Quarter', 'Product', 'Units')
# dollars in millions
prod_rev <- read.csv("apple_prod_revenue.csv", header = FALSE, stringsAsFactors = FALSE)
colnames(prod_rev) <- c('Year', 'Quarter', 'iPhone', 'iPad', 'Mac', 'iPod', 'Q_Y', 'Y_Q')
prod_rev2 <- read.csv("apple2_prod_revenue.csv", header = FALSE, stringsAsFactors = FALSE)
colnames(prod_rev2) <- c('Q_Y', 'Y_Q', 'Year', 'Quarter', 'Product', 'Rev')
p_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev, color = Region, group = Region, frame = Year)) +
geom_point(size = 4) +
geom_line() + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016')
#scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.5),1)) +
scale_y_continuous(limits = c(0, 35000), breaks = round(seq(min(countries_rev2$Rev), max(countries_rev2$Rev), by = 2000),1))
ggplotly(p_region_rev)
b_region_rev < -ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev, color = Region)) + #geom_point(size = 4) +
geom_bar(aes(fill = countries_rev2$Region), stat = 'identity', position = 'dodge') + theme_bw() #+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplotly(b_region_rev)
b_region_rev < -ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev, color = Region)) + #geom_point(size = 4) +
geom_bar(aes(fill = countries_rev2$Region), stat = 'identity', position = 'dodge') + theme_bw() #+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
p_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev, color = Region, group = Region, frame = Year)) +
geom_point(size = 4) +
geom_line() + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016')
#scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.5),1)) +
scale_y_continuous(limits = c(0, 35000), breaks = round(seq(min(countries_rev2$Rev), max(countries_rev2$Rev), by = 2000),1))
ggplotly(p_region_rev)
#gg_animate(g)
b_region_rev < ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev, color = Region)) + #geom_point(size = 4) +
geom_bar(aes(fill = countries_rev2$Region), stat = 'identity', position = 'dodge') + theme_bw() #+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplotly(b_region_rev)
ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev, color = Region)) + #geom_point(size = 4) +
geom_bar(aes(fill = countries_rev2$Region), stat = 'identity', position = 'dodge') + theme_bw() #+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
b_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev)) + #geom_point(size = 4) +
geom_bar(aes(fill = countries_rev2$Region), stat = 'identity', position = 'dodge') + theme_bw() #+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplotly(b_region_rev)
b_prod_rev <- ggplot(data = prod_rev2, aes(x = Y_Q, y = Product)) + #geom_point(size = 4) +
geom_bar(aes(fill = prod_rev2$Region), stat = 'identity', position = 'dodge') + theme_bw() #+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplotly(b_region_rev)
b_prod_rev <- ggplot(data = prod_rev2, aes(x = Y_Q, y = Product)) + #geom_point(size = 4) +
geom_bar(aes(fill = prod_rev2$Region), stat = 'identity', position = 'dodge') + theme_bw() #+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplotly(b_prod_rev)
b_prod_rev <- ggplot(data = prod_rev2, aes(x = Y_Q, y = Product)) + #geom_point(size = 4) +
geom_bar(aes(fill = prod_rev2$Product), stat = 'identity', position = 'dodge') + theme_bw() #+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplotly(b_prod_rev)
View(prod_rev2)
View(prod_rev)
b_prod_rev <- ggplot(data = prod_rev2, aes(x = Y_Q, y = Rev)) + #geom_point(size = 4) +
geom_bar(aes(fill = prod_rev2$Product), stat = 'identity', position = 'dodge') + theme_bw() #+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplotly(b_prod_rev)
b_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev)) + #geom_point(size = 4) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016') +
geom_bar(aes(fill = countries_rev2$Region), stat = 'identity', position = 'dodge') + theme_bw() #+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplotly(b_region_rev)
b_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev)) + #geom_point(size = 4) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016') +
geom_bar(aes(fill = countries_rev2$Region), stat = 'identity', position = 'dodge') + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplotly(b_region_rev)
b_prod_rev <- ggplot(data = prod_rev2, aes(x = Y_Q, y = Rev)) + #geom_point(size = 4) +
geom_bar(aes(fill = prod_rev2$Product), stat = 'identity', position = 'dodge') + theme_bw() #+ theme(axis.text.x = element_text(angle = 90, hjust = 1))+
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Product Revenue 2010 - 2016')
ggplotly(b_prod_rev)
b_prod_rev <- ggplot(data = prod_rev2, aes(x = Y_Q, y = Rev)) + #geom_point(size = 4) +
geom_bar(aes(fill = prod_rev2$Product), stat = 'identity', position = 'dodge') + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Product Revenue 2010 - 2016')
ggplotly(b_prod_rev)
b_prod_units <- ggplot(data = prod_units2, aes(x = Y_Q, y = Units)) + #geom_point(size = 4) +
geom_bar(aes(fill = prod_units2$Product), stat = 'identity', position = 'dodge') + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab('') + ylab('Units Sold (thousands)') + ggtitle('Apple Product Units Sold 2010 - 2016')
ggplotly(b_prod_units)
b_prod_units <- ggplot(data = prod_units2, aes(x = Y_Q, y = Units, text = paste("Product:", Product))) + #geom_point(size = 4) +
geom_bar(aes(fill = prod_units2$Product), stat = 'identity', position = 'dodge') + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab('') + ylab('Units Sold (thousands)') + ggtitle('Apple Product Units Sold 2010 - 2016')
ggplotly(b_prod_units)
b_prod_units <- ggplot(data = prod_units2, aes(x = Y_Q, y = Units, text = paste("Product:", Product))) + #geom_point(size = 4) +
geom_bar(aes(fill = prod_units2$Product), stat = 'identity', position = 'dodge') + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab('') + ylab('Units Sold (thousands)') + ggtitle('Apple Product Units Sold 2010 - 2016')
ggplotly(b_prod_units)
b_prod_units <- ggplot(data = prod_units2, aes(x = Y_Q, y = Units)) + #geom_point(size = 4) +
b_prod_rev <- ggplot(data = prod_rev2, aes(x = Y_Q, y = Rev)) + #geom_point(size = 4) +
geom_bar(aes(fill = prod_rev2$Product), stat = 'identity', position = 'dodge') + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Product Revenue 2010 - 2016')
ggplotly(b_prod_rev)
b_prod_rev <- ggplot(data = prod_rev2, aes(x = Y_Q, y = Rev)) + #geom_point(size = 4) +
geom_bar(aes(fill = prod_rev2$Product), stat = 'identity', position = 'dodge') + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Product Revenue 2010 - 2016')
ggplotly(b_prod_rev)
b_prod_rev <- ggplot(data = prod_rev2, aes(x = Y_Q, y = Rev)) + #geom_point(size = 4) +
geom_bar(aes(fill = prod_rev2$Product), stat = 'identity', position = 'dodge') + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Product Revenue 2010 - 2016')
p <- plotly_build(b_prod_rev)
p$data[[1]]$name <- 'Group A'
p$data[[2]]$name <- 'Group B'
ggplotly(b_prod_rev)
p$data[[1]]$name
b_prod_rev <- ggplot(data = prod_rev2, aes(x = Y_Q, y = Rev)) + #geom_point(size = 4) +
geom_bar(aes(fill = prod_rev2$Product), stat = 'identity', position = 'dodge') + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Product Revenue 2010 - 2016')
p <- plotly_build(b_prod_rev)
p$b_prod_rev[[1]]$name <- 'Group A'
p$b_prod_rev[[2]]$name <- 'Group B'
ggplotly(b_prod_rev)
b_prod_rev <- ggplot(data = prod_rev2, aes(x = Y_Q, y = Rev)) + #geom_point(size = 4) +
geom_bar(aes(fill = prod_rev2$Product), stat = 'identity', position = 'dodge') + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Product Revenue 2010 - 2016')
p <- plotly_build(b_prod_rev)
p$b_prod_rev[[1]]$name <- 'Group A'
#p$b_prod_rev[[2]]$name <- 'Group B'
ggplotly(b_prod_rev)
b_prod_units <- ggplot(data = prod_units2, aes(x = Y_Q, y = Units)) + #geom_point(size = 4) +
geom_bar(aes(fill = prod_units2$Product), stat = 'identity', position = 'dodge') + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab('') + ylab('Units Sold (thousands)') + ggtitle('Apple Product Units Sold 2010 - 2016')
ggplotly(b_prod_units)
?plotly_POST
b_prod_rev <- ggplot(data = prod_rev2, aes(x = Y_Q, y = Rev)) + #geom_point(size = 4) +
geom_bar(aes(fill = prod_rev2$Product), stat = 'identity', position = 'dodge') + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Product Revenue 2010 - 2016')
ggplotly(b_prod_rev)
b_prod_units <- ggplot(data = prod_units2, aes(x = Y_Q, y = Units)) + #geom_point(size = 4) +
geom_bar(aes(fill = prod_units2$Product), stat = 'identity', position = 'dodge') + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab('') + ylab('Units Sold (thousands)') + ggtitle('Apple Product Units Sold 2010 - 2016')
ggplotly(b_prod_units)
b_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev)) + #geom_point(size = 4) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016') +
geom_bar(aes(fill = countries_rev2$Region), stat = 'identity', position = 'dodge') + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplotly(b_region_rev)
b_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev)) + #geom_point(size = 4) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016') +
geom_bar(aes(fill = countries_rev2$Region), stat = 'identity', position = 'dodge') + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p <- plotly_build(b_region_rev)
p$data[[1]]$name <- 'Group A'
p$data[[2]]$name <- 'Group B'
plotly_POST(p)
rm(p)
b_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev, text = Region)) + #geom_point(size = 4) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016') +
geom_bar(aes(fill = countries_rev2$Region), stat = 'identity', position = 'dodge') + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplotly(b_region_rev)
b_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev)) + #geom_point(size = 4) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016') +
geom_bar(aes(fill = countries_rev2$Region), stat = 'identity', position = 'dodge') + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplotly(b_region_rev)
?dashboardSidebar
?selectInput
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
'Apple Product Units Sold 2010 - 2016'
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?br
shiny::runApp()
shiny::runApp()
if (5 = 5) {
cat('true')
}
if (5 = 5) {}
cat('true')
}
if (5 == 5) {
cat('true')
}
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?p
?h3
?p
shiny::runApp()
shiny::runApp()
p1 <- ggplot_waterfall(
dtData = prod_units2,
'Y_Q',
'Units'
)
ggplotly(p1)
View(prod_units2)
p1 <- ggplot_waterfall(
dtData = prod_units2,
1:101,
'Units'
)
library(ggTimeSeries)
p1 <- ggplot_waterfall(
dtData = prod_units2,
1:101,
'Units'
)
p1 <- ggplot_waterfall(
dtData = prod_units2,
1:101,
'Units'
)
ggplotly(p1)
p1 <- ggplot_waterfall(
dtData = prod_units2,
1:101,
'Units'
)
p1
?set.seed
?cumsum
?rnorm
?ggplot_waterfall
p1 <- ggplot_waterfall(
dtData = countries_rev2,
'Y_Q', 'Rev', color = 'Region'
)
?data.frame
dfData = data.frame(x = 1:100, y = cumsum(rnorm(100)))
View(dfData)
# Apple region revenue
p_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev
geom_line() + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016')
#scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.5),1)) +
scale_y_continuous(limits = c(0, 35000), breaks = round(seq(min(countries_rev2$Rev), max(countries_rev2$Rev), by = 2000),1))
ggplotly(p_region_rev)
# Apple region revenue
p_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev, color = Region, group = Region, frame = Year)) +
geom_point(size = 4) +
geom_line() + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016')
#scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.5),1)) +
scale_y_continuous(limits = c(0, 35000), breaks = round(seq(min(countries_rev2$Rev), max(countries_rev2$Rev), by = 2000),1))
ggplotly(p_region_rev)
# Apple region revenue
p_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev)) +
geom_point(size = 4) +
geom_line() + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016')
#scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.5),1)) +
scale_y_continuous(limits = c(0, 35000), breaks = round(seq(min(countries_rev2$Rev), max(countries_rev2$Rev), by = 2000),1))
ggplotly(p_region_rev)
#gg_animate(g)
# Apple region revenue
p_region_rev <- ggplot(data = countries_rev2, aes(x = Y_Q, y = Rev, color = Region, group = Region, frame = Year)) +
geom_point(size = 4) +
geom_line() + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
xlab('Quarters') + ylab('Revenue (USD in millions)') + ggtitle('Apple Worldwide Revenue 2010 - 2016')
#scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.5),1)) +
scale_y_continuous(limits = c(0, 35000), breaks = round(seq(min(countries_rev2$Rev), max(countries_rev2$Rev), by = 2000),1))
ggplotly(p_region_rev)
# base plot
p1 = ggplot_waterfall(
dtData = dfData,
'x',
'y'
)
# adding some formatting
p1 +
xlab(NULL) +
ylab(NULL)
# base plot
p1 = ggplot_waterfall(
dtData = dfData,
'x',
'y'
)
# adding some formatting
p1 +
xlab(NULL) +
ylab(NULL) + theme_bw()
p1 <- ggplot_waterfall(
dtData = countries_rev2,
'Y_Q', 'Rev'
)
p1
p1 <- ggplot_waterfall(
dtData = countries_rev2,
'Y_Q', 'Rev'
)
p1
p1 <- ggplot_waterfall(
dtData = countries_rev2,
'Y_Q', 'Rev'
)
p1 + theme_bw()
p1 <- ggplot_waterfall(
dtData = countries_rev2,
'Y_Q', 'Rev'
) + theme_bw()
ggplotly(p1)
p1 <- ggplot_waterfall(
dtData = countries_rev2,
'Y_Q', 'Rev'
) + theme_bw()
ggplotly(p1)
p1 <- ggplot_waterfall(
dtData = countries_rev2,
'Y_Q', 'Rev'
) + theme_bw()
ggplotly(p1)
p1 <- ggplot_waterfall(
dtData = countries_rev2,
'Y_Q', 'Rev'
) + theme_bw()
p1
View(countries_rev)
p1 <- ggplot_waterfall(
dtData = countries_rev,
'Y_Q', 'Americas'
) + theme_bw() + ylab()
p1
p1 <- ggplot_waterfall(
dtData = countries_rev,
'Y_Q', 'Americas'
) + theme_bw()
p1
p1 <- ggplot_waterfall(
dtData = countries_rev,
'Y_Q', 'Americas' + xlab('Quarters') + ylab('Revenue (USD in millions)')
) + theme_bw()
p1
p1 <- ggplot_waterfall(
dtData = countries_rev,
'Y_Q', 'Americas') + xlab('Quarters') + ylab('Revenue (USD in millions)') + theme_bw()
p1
ggplot_waterfall(
dtData = countries_rev,
'Y_Q', 'Americas') + xlab('Quarters') + ylab('Revenue (USD in millions)') + theme_bw()
ggplot_waterfall(
dtData = countries_rev,
'Y_Q', 'Asia-Pacific') + xlab('Quarters') + ylab('Revenue (USD in millions)') + theme_bw()
ggplot_waterfall(
dtData = countries_rev,
'Y_Q', 'Asia') + xlab('Quarters') + ylab('Revenue (USD in millions)') + theme_bw() + ggtitle('Asia-Pacific')
shiny::runApp()
